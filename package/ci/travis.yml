matrix:
  include:
  #- language: cpp
    #os: linux
    #dist: xenial
    #compiler: gcc
    #env:
    #- JOBID=base-linux
    #- BRANCH=base
    #- EXTRA="-DWITH_SDL2APPLICATION=ON"
    #addons:
      #apt:
        #packages:
        #- libgl1-mesa-dev
        #- libsdl2-dev
        #- ninja-build
  #- language: cpp
    #os: osx
    #compiler: clang
    #env:
    #- JOBID=base-macos
    #- BRANCH=base
    #- EXTRA="-DWITH_SDL2APPLICATION=ON"
  #- language: cpp
    #os: linux
    #dist: xenial
    #compiler: gcc
    #env:
    #- JOBID=base-glfw-linux
    #- BRANCH=base-glfw
    #- EXTRA="-DWITH_GLFWAPPLICATION=ON"
    #addons:
      #apt:
        #packages:
        #- libgl1-mesa-dev
        #- ninja-build
        #- libglfw3-dev
  #- language: cpp
    #os: linux
    #dist: xenial
    #compiler: gcc
    #env:
    #- JOBID=base-gtkmm-linux
    #- BRANCH=base-gtkmm
    #- EXTRA="-DWITH_GLXCONTEXT=ON"
    #addons:
      #apt:
        #packages:
        #- libgl1-mesa-dev
        #- ninja-build
        #- libgtkmm-3.0-dev
  #- language: cpp
    #os: linux
    #dist: xenial
    #compiler: gcc
    #env:
    #- JOBID=base-wxwidgets-linux
    #- BRANCH=base-wxwidgets
    #- EXTRA="-DWITH_GLXCONTEXT=ON"
    #addons:
      #apt:
        #packages:
        #- libgl1-mesa-dev
        #- ninja-build
        #- libwxgtk3.0-dev
  #- language: cpp
    #os: osx
    #compiler: clang
    #env:
    #- JOBID=base-qt-macos
    #- BRANCH=base-qt
    #- EXTRA="-DWITH_CGLCONTEXT=ON"
  #- language: cpp
    #os: linux
    #dist: xenial
    #compiler: gcc
    #env:
    #- JOBID=windowless-linux
    #- BRANCH=windowless
    #- EXTRA="-DWITH_WINDOWLESSGLXAPPLICATION=ON"
    #addons:
      #apt:
        #packages:
        #- libgl1-mesa-dev
        #- ninja-build
  #- language: cpp
    #os: osx
    #compiler: clang
    #env:
    #- JOBID=windowless-macos
    #- BRANCH=windowless
    #- EXTRA="-DWITH_WINDOWLESSCGLAPPLICATION=ON"
  #- language: cpp
    #os: linux
    #dist: xenial
    #compiler: gcc
    #env:
    #- JOBID=scenegraph2D-linux
    #- BRANCH=scenegraph2D
    #- EXTRA="-DWITH_SDL2APPLICATION=ON -DWITH_SCENEGRAPH=ON"
    #addons:
      #apt:
        #packages:
        #- libgl1-mesa-dev
        #- libsdl2-dev
        #- ninja-build
  #- language: cpp
    #os: linux
    #dist: xenial
    #compiler: gcc
    #env:
    #- JOBID=scenegraph3D-linux
    #- BRANCH=scenegraph3D
    #- EXTRA="-DWITH_SDL2APPLICATION=ON -DWITH_SCENEGRAPH=ON"
    #addons:
      #apt:
        #packages:
        #- libgl1-mesa-dev
        #- libsdl2-dev
        #- ninja-build
  - language: cpp
    os: osx
    osx_image: xcode7.3
    env:
    - JOBID=base-ios-gles2
    - BRANCH=base-ios
    - TARGET_GLES2=ON
  - language: cpp
    os: osx
    osx_image: xcode7.3
    env:
    - JOBID=base-ios-gles3
    - BRANCH=base-ios
    - TARGET_GLES2=OFF
  #- language: cpp
    #os: osx
    #osx_image: xcode9.3
    #env:
    #- JOBID=base-emscripten-webgl1
    #- BRANCH=base-emscripten
    #- TARGET_GLES2=ON
  #- language: cpp
    #os: osx
    #osx_image: xcode9.3
    #env:
    #- JOBID=base-emscripten-webgl2
    #- BRANCH=base-emscripten
    #- TARGET_GLES2=OFF
  #- language: cpp
    #os: osx
    #osx_image: xcode9.3
    #env:
    #- JOBID=windowless-emscripten-webgl1
    #- BRANCH=windowless-emscripten
    #- TARGET_GLES2=ON
  #- language: cpp
    #os: osx
    #osx_image: xcode9.3
    #env:
    #- JOBID=windowless-emscripten-webgl2
    #- BRANCH=windowless-emscripten
    #- TARGET_GLES2=OFF
  - language: android
    os: linux
    # Setting xenial here will cause it to use 12.04, with GCC 4.6 and other
    # prehistoric nightmares. So staying with 14.04 for the time being.
    dist: trusty
    env:
    - JOBID=base-android-gles2
    - BRANCH=base-android
    - TARGET_GLES2=ON
    android:
      components:
      - build-tools-26.0.2
      - android-22
  - language: android
    os: linux
    # Setting xenial here will cause it to use 12.04, with GCC 4.6 and other
    # prehistoric nightmares. So staying with 14.04 for the time being.
    dist: trusty
    env:
    - JOBID=base-android-gles3
    - BRANCH=base-android
    - TARGET_GLES2=OFF
    android:
      components:
      - build-tools-26.0.2
      - android-22

cache:
  directories:
  - $HOME/sdl2
  - $HOME/cmake

before_install:
- if [ "$BRANCH" == "base-android" ]; then yes | sdkmanager "cmake;3.6.4111459"; fi

install:
# Android needs CMake 3.7, but https://gitlab.kitware.com/cmake/cmake/issues/17253
# is fixed in 3.9.2, so grab that.
- if [ "$BRANCH" == "base-android" ] && [ ! -e "$HOME/cmake/bin" ]; then cd $HOME ; wget -nc --no-check-certificate https://cmake.org/files/v3.9/cmake-3.9.2-Linux-x86_64.tar.gz && mkdir -p cmake && cd cmake && tar --strip-components=1 -xzf ../cmake-3.9.2-Linux-x86_64.tar.gz && cd $TRAVIS_BUILD_DIR ; fi
- if [ "$BRANCH" == "base-android" ]; then export PATH=$HOME/cmake/bin:$PATH && cmake --version; fi
- if [ "$BRANCH" == "base-android" ]; then wget -nc https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip && unzip -q android-*.zip; fi
- if [ "$BRANCH" == "base-ios" ]; then gem install xcpretty; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then HOMEBREW_NO_AUTO_UPDATE=1 brew install ninja; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$BRANCH" == "base-qt" ]; then HOMEBREW_NO_AUTO_UPDATE=1 brew install qt; fi

# SDL (cached)
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$BRANCH" == "base" ]; then HOMEBREW_NO_AUTO_UPDATE=1 brew install sdl2; fi
- if [ "$BRANCH" == "base-ios" ] && [ ! -e "$HOME/sdl2/include" ]; then curl -O https://www.libsdl.org/release/SDL2-2.0.4.tar.gz && tar -xzvf SDL2-2.0.4.tar.gz && cd SDL2-2.0.4/Xcode-iOS/SDL && xcodebuild -sdk iphonesimulator9.3 | xcpretty && mkdir -p ../../../sdl2/lib && cp build/Release-iphonesimulator/libSDL2.a ../../../sdl2/lib && mkdir -p ../../../sdl2/include/SDL2 && cp -R ../../include/* ../../../sdl2/include/SDL2 && cd ../../..; fi

script:
- if [ "$BRANCH" == "base" ] || [ "$BRANCH" == "base-glfw" ] || [ "$BRANCH" == "base-gtkmm" ] || [ "$BRANCH" == "base-qt" ] || [ "$BRANCH" == "base-wxwidgets" ] || [ "$BRANCH" == "windowless" ] || [ "$BRANCH" == "scenegraph2D" ] || [ "$BRANCH" == "scenegraph3D" ]; then ./package/ci/unix-desktop.sh; fi
- if [ "$BRANCH" == "base-android" ]; then ./package/ci/travis-android-arm.sh; fi
- if [ "$BRANCH" == "base-ios" ]; then ./package/ci/travis-ios-simulator.sh; fi
- if [ "$BRANCH" == "base-emscripten" ] || [ "$BRANCH" == "windowless-emscripten" ]; then ./package/ci/emscripten.sh; fi
# Travis somehow is not able to gather all output, try to force it using this
- sync
